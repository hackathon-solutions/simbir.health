server:
  port: ${ACCOUNT_SERVICE_PORT}
spring:
  datasource:
    username: ${ACCOUNT_POSTGRES_DB_USERNAME:postgres}
    password: ${ACCOUNT_POSTGRES_DB_PASSWORD:postgres}
    url: jdbc:postgresql://localhost:${ACCOUNT_POSTGRES_DB_PORT}/${ACCOUNT_POSTGRES_DB_NAME}
  jpa:
    hibernate:
      ddl-auto: validate
service:
  authentication:
    secret:
      key: ${ACCOUNT_SERVICE_SECRET}
    authorization-server:
      server-hostname: "http://localhost:8085/api/"
      access-token-release-path: "/Authentication/SignIn"
      access-token-suspend-path: "/Authentication/SignOut"
      access-token-verify-path: "/Authentication/Validate"
  rest-api:
    controllers:
      authentication:
        path: "/api/Authentication"
        endpoints:
          account-sign-up: "/SignUp"
          account-sign-in: "/SignIn"
          token-ban: "/SignOut"
          token-validate: "/Validate"
          token-refresh: "/Refresh"
      account:
        path: "/api/Accounts"
        endpoints:
          account-get-current: "/Me"
          account-patch-current: "/Update"
          account-get-all: "/"
          account-create: "/"
          account-put-by-id: "/{accountId}"
          account-delete-by-id: "/{accountId}"
          account-get-by-role: "/{role}"
      doctor:
        path: "/api/Doctors"
        endpoints:
          doctors-get-all: "/"
          doctors-get-by-id: "/{accountId}"